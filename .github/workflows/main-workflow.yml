name: CI Pipeline

env:
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  DATABASE_URL_DEV: ${{ secrets.DATABASE_URL_DEV }}
  DATABASE_URL_MAIN: ${{ secrets.DATABASE_URL_MAIN }}

on:
  push:
    branches:
      - main
      - master
      - v3-svelte5
  pull_request:
    branches:
      - main
      - master
      - v3-svelte5

jobs:
  test:
    name: Playwright Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci --force                               # TODO: Remove force later
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}
        run: npx playwright test
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    name: Deploy schema migrations
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.result == 'success' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Install dependencies
        run: npm ci --force                                      # TODO: Remove force later
      - name: Check for changes in migrations
        id: check_migrations
        run: |
          git fetch origin ${{ github.sha }}
          if git diff --quiet HEAD~1 HEAD -- ./prisma/migrations; then
            echo "No changes in migrations"
            exit 1
          else
            echo "Changes detected in migrations"
          fi
      - name: Apply all pending migrations to the database
        if: steps.check_migrations.outcome == 'success'
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_MAIN }}
